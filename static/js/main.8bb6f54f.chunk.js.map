{"version":3,"sources":["components/Header/Header.js","components/TestBox/TestBox.js","data.js","components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","index_esm","mr","fontWeight","color","Component","TestBox","_this$props","this","props","title","_this$props$checks","checks","testStatus","some","check","status","flexWrap","alignItems","justifyContent","Item","concat","href","ml","dist_index_esm","icon","Clippy","ChevronUp","ChevronDown","map","i","key","Check","X","react","aria-current","size","tab","Code","ListUnordered","File","Eye","meta","platform","url","file","sessionId","code","description","steps","item","error","message","stack","src","image","alt","asserts","assert","images","expected","actual","diff","data","tests","Main","test","TestBox_TestBox_TestBox","Object","assign","App","Header_Header_Header","Main_Main_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8bb6f54f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Heading, Text } from '@primer/components';\n\nimport './Header.css';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\">\n        <Heading>Harry report</Heading>\n        <Text mr={3}><Text fontWeight=\"bold\">Total Tests</Text>: 8714</Text>\n        <Text mr={3} color=\"green.5\"><Text fontWeight=\"bold\">Passed</Text>: 8714</Text>\n        <Text mr={3} color=\"red.5\"><Text fontWeight=\"bold\">Failed</Text>: 15</Text>\n        <Text mr={3} color=\"gray.5\"><Text fontWeight=\"bold\">Skipped</Text>: 252</Text>\n        <Text mr={3} color=\"yellow.6\"><Text fontWeight=\"bold\">Retries</Text>: 455</Text>\n      </div>\n    );\n  }\n}\n\nexport { Header };\n","import React, { Component, Fragment } from 'react';\nimport { Text, Button, Link, Flex } from '@primer/components';\nimport Octicon, { ChevronUp, ChevronDown, Check, X, Clippy, Eye, Code, File, ListUnordered } from '@githubprimer/octicons-react';\n\nimport './TestBox.css';\n\nclass TestBox extends Component {\n  render() {\n    const { title, checks = [] } = this.props;\n    const testStatus = checks.some(check => check.status === 'fail');\n    const color = testStatus ? 'red' : 'green';\n\n    return (\n      <div className=\"TestBox Box Box--condensed\">\n        <div className=\"Box-header\">\n          <Flex flexWrap=\"nowrap\" alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex.Item>\n              <h3 className=\"Box-title flex-auto\">\n                <Text color={`${color}.5`}>{title}</Text>\n              </h3>\n            </Flex.Item>\n            <Flex.Item className=\"Box-header-controls text-right\">\n              <Link href=\"#url\" ml={3} color=\"gray.5\"><Octicon icon={Clippy}/></Link>\n              <Link href=\"#url\" ml={3} color=\"gray.5\"><Octicon icon={testStatus ? ChevronUp : ChevronDown}/></Link>\n            </Flex.Item>\n          </Flex>\n        </div>\n        {checks && checks.map((check, i) => {\n          const color =\n            check.status === 'success' ? 'green' :\n            check.status === 'fail' ? 'red' :\n            'gray';\n          \n          return (\n            <div key={i} className=\"Box-row p-0\">\n              <div className=\"Box Box--inner Box--condensed\">\n                <div className=\"Box-row Box-subheader Box-row--gray\">\n                  <Flex flexWrap=\"nowrap\" alignItems=\"center\" justifyContent=\"space-between\">\n                    <Flex.Item>\n                      <Flex flexWrap=\"nowrap\" alignItems=\"center\">\n                        <Flex.Item>\n                          <Text color={`${color}.5`} fontWeight=\"bold\" mr={3} className=\"TestBox-check-title\"><Octicon icon={check.status === 'success' ? Check : X} className=\"mr-2\"/> {check.title}</Text>\n                          <Text color=\"gray.5\" mr={2}><i>Attempts:</i></Text>\n                        </Flex.Item>\n                        <Flex.Item>\n                          <nav className=\"subnav f6 mr-2\">\n                            <a href=\"#url\" className=\"subnav-item\">1</a>\n                            {check.status === 'fail' ? (\n                              <Fragment>\n                                <a href=\"#url\" className=\"subnav-item\">2</a>\n                                <a href=\"#url\" className=\"subnav-item\">3</a>\n                                <a href=\"#url\" className=\"subnav-item\">4</a>\n                                <a href=\"#url\" className=\"subnav-item\">5</a>\n                                <a href=\"#url\" className=\"subnav-item\">6</a>\n                                <a href=\"#url\" className=\"subnav-item\">7</a>\n                                <a href=\"#url\" className=\"subnav-item selected\" aria-current=\"page\">8</a>\n                              </Fragment>\n                            ) : ''}\n                          </nav>\n                        </Flex.Item>\n                      </Flex>\n                    </Flex.Item>\n                    <Flex.Item>\n                      <div className=\"BtnGroup mr-1\">\n                        <Button size=\"sm\" className={`BtnGroup-item ${check.tab === 0 ? 'selected' : ''}`}><Octicon icon={Code}/></Button>\n                        <Button size=\"sm\" className={`BtnGroup-item ${check.tab === 1 ? 'selected' : ''}`}><Octicon icon={ListUnordered}/></Button>\n                        <Button size=\"sm\" className={`BtnGroup-item ${check.tab === 2 ? 'selected' : ''}`}><Octicon icon={File}/></Button>\n                      </div>\n                      {check.status === 'fail' ? (\n                        <div className=\"BtnGroup mr-1\">\n                          <Button size=\"sm\" className=\"BtnGroup-item\">Skip</Button>\n                          <Button size=\"sm\" className=\"BtnGroup-item\">Accept</Button>\n                        </div>\n                      ) : '' }\n                      <Button className=\"mr-3\" size=\"sm\">View</Button>\n                      <Link href=\"#url\" color=\"gray.5\"><Octicon icon={Eye}/></Link>\n                      <Link href=\"#url\" ml={3} color=\"gray.5\"><Octicon icon={check.status === 'fail' ? ChevronUp : ChevronDown}/></Link>\n                    </Flex.Item>\n                  </Flex>\n                </div>\n                {check.tab === 0 && check.meta ? (\n                  <div className=\"Box-row Box-row--gray\">\n                    <strong>Meta-info:</strong>\n                    <div className=\"mt-1 overflow-hidden\">\n                      <strong>platform:</strong> {check.meta.platform}<br/>\n                      <strong>url:</strong> <Link href=\"#url\">{check.meta.url}</Link><br/>\n                      <strong>file:</strong> {check.meta.file}<br/>\n                      <strong>sessionId:</strong> {check.meta.sessionId}<br/>\n                    </div>\n                  </div>\n                ) : ''}\n                {check.tab === 0 && check.code ? (\n                  <div className=\"Box-row\">\n                    <div className=\"mt-1\">\n                      <pre className=\"pl-3 lh-default text-mono\">\n                        {check.code}\n                      </pre>\n                    </div>\n                  </div>\n                ) : ''}\n                {check.tab === 1 && check.description && check.description.steps ? (\n                  <Fragment>\n                    <div className=\"Box-row Box-row--gray\">\n                      <strong>Description:</strong>\n                    </div>\n                    <div className=\"Box-row\">\n                      <div className=\"mt-1\">\n                        <pre className=\"pl-3 lh-default text-mono\">\n                          {check.description.steps.map(item => `- ${item}\\n`)}\n                        </pre>\n                      </div>\n                    </div>\n                  </Fragment>\n                ) : ''}\n                {check.tab === 2 && check.error ? (\n                  <div className=\"Box-row TestBox-error flash flash-full flash-error\">\n                    <Flex flexWrap=\"nowrap\" justifyContent=\"space-between\">\n                      <Flex.Item>\n                        <strong>message:</strong> {check.error.message}<br/>\n                        <strong>stack:</strong><br/>\n                        <div className=\"TestBox-error-stack\">\n                          {check.error.stack.map((item, i) => {\n                            return <Fragment key={i}><Text>{item}</Text><br/></Fragment>;\n                          })}\n                        </div>\n                      </Flex.Item>\n                      <Flex.Item>\n                        <img className=\"border border-red\" src={check.error.image} alt=\"Actual\"/>\n                      </Flex.Item>\n                    </Flex>\n                  </div>\n                ) : ''}\n                {check.tab === 2 && check.asserts ? check.asserts.map((assert, i) => {\n                  const color =\n                    assert.status === 'success' ? 'green' :\n                    assert.status === 'fail' ? 'red' :\n                    'gray';\n\n                  return (\n                    <Fragment key={i}>\n                      {assert.title ? (\n                        <div className=\"Box-row Box-row--gray\">\n                          <Flex flexWrap=\"nowrap\" alignItems=\"center\" justifyContent=\"space-between\">\n                            <Flex.Item>\n                              <Text color={`${color}.5`} fontWeight=\"bold\">{assert.title}</Text>\n                            </Flex.Item>\n                            <Flex.Item>\n                              <Link href=\"#url\">{assert.status === 'success' ? 'Show' : 'Hide'}</Link>\n                            </Flex.Item>\n                          </Flex>\n                        </div>\n                      ) : ''}\n                      {assert.status === 'fail' && assert.images.expected && assert.images.actual && assert.images.diff ? (\n                        <Fragment>\n                          <div className=\"Box-row Box-row--darkgray\">\n                            <Flex className=\"Image-viewer\" flexWrap=\"nowrap\" alignItems=\"center\" justifyContent=\"center\">\n                              {assert.images.expected ? (\n                                <Flex.Item className=\"Image-item\">\n                                  <div className=\"Image-title\"><Text color=\"green.5\" fontWeight=\"bold\">Expected</Text></div>\n                                  <img className=\"border border-green\" src={assert.images.expected} alt=\"Expected\"/>\n                                </Flex.Item>\n                              ) : ''}\n                              {assert.images.actual ? (\n                                <Flex.Item className=\"Image-item\">\n                                  <div className=\"Image-title\"><Text color=\"red.5\" fontWeight=\"bold\">Actual</Text></div>\n                                  <img className=\"border border-red\" src={assert.images.actual} alt=\"Actual\"/>\n                                </Flex.Item>\n                              ) : ''}\n                              {assert.images.diff ? (\n                                <Flex.Item className=\"Image-item\">\n                                  <div className=\"Image-title\"><Text color=\"gray.5\" fontWeight=\"bold\">Diff</Text></div>\n                                  <img src={assert.images.diff} alt=\"Diff\"/>\n                                </Flex.Item>\n                              ) : ''}\n                            </Flex>\n                          </div>\n                          <div className=\"Box-row Box-row--gray\">\n                            <Flex flexWrap=\"nowrap\" alignItems=\"center\" justifyContent=\"center\">\n                              <Flex.Item className=\"Image-viewer-tab\">\n                                <Text fontWeight=\"bold\">2-up</Text>\n                              </Flex.Item>\n                              <Flex.Item className=\"Image-viewer-tab\">\n                                <Text>Only Diff</Text>\n                              </Flex.Item>\n                              <Flex.Item className=\"Image-viewer-tab\">\n                                <Text>Loupe</Text>\n                              </Flex.Item>\n                              <Flex.Item className=\"Image-viewer-tab\">\n                                <Text>Swipe</Text>\n                              </Flex.Item>\n                              <Flex.Item className=\"Image-viewer-tab\">\n                                <Text>Onion Skin</Text>\n                              </Flex.Item>\n                            </Flex>\n                          </div>\n                        </Fragment>\n                      ) : ''}\n                    </Fragment>\n                  );\n                }) : ''}\n              </div>\n            </div>\n          ); \n        })}\n      </div>\n    );\n  }\n}\n\nexport { TestBox };\n","export default {\n  tests: [\n    {\n      title: 'Колдунщик картинок / Многорядный в правой колонке с большой кнопкой перехода на Картинки / Кнопка \"Еще картинки\" с фоном вместо большой кнопки и тумбами со скруглениями и отступами Четырехрядный Нажатие на картинку открывает сервис',\n      checks: [\n        {\n          status: 'fail',\n          title: 'chrome-desktop',\n          tab: 2,\n          error: {\n            message: 'AssertionError: не сработал счетчик',\n            stack: [\n              'at assertCounters.allTriggeredCounters (/hermione/commands/commands-templar/common/checkCounter2.js:57:28)',\n              'at runAssertCounters (/node_modules/hermione-get-counters/lib/commands/assert-counters.js:67:25)',\n              'at <anonymous>',\n              'at process._tickDomainCallback (internal/process/next_tick.js:228:7)',\n              'at assertCountersd - checkCounter2.js:47:20'\n            ],\n            image: 'assets/images/3/chrome-desktop_current_7.png'\n          }\n        }\n      ]\n    },\n    {\n      title:'Колдунщик чатов в правой колонке / написать всем / написать всем Написать всем',\n      checks: [\n        {\n          status: 'fail',\n          title: 'chrome-desktop',\n          tab: 2,\n          asserts: [\n            {\n              status: 'fail',\n              title: 'chat-list',\n              images: {\n                expected: 'assets/images/2/chrome-desktop_ref_7.png',\n                actual: 'assets/images/2/chrome-desktop_current_7.png',\n                diff: 'assets/images/2/chrome-desktop_diff_7.png'\n              }\n            }\n          ]\n        }\n      ]\n    },\n    {\n      title:'Расширенный поиск Проверка фильтров Проверка выпадающего списка кнопки \"Еще\"',\n      checks: [\n        {\n          status: 'fail',\n          title: 'edge-desktop',\n          tab: 2,\n          asserts: [\n            {\n              status: 'fail',\n              title: 'lang-popup',\n              images: {\n                expected: 'assets/images/1/edge-desktop_ref_7.png',\n                actual: 'assets/images/1/edge-desktop_current_7.png',\n                diff: 'assets/images/1/edge-desktop_diff_7.png'\n              }\n            },\n            {\n              status: 'success',\n              title: 'lang-popup2'\n            }\n          ]\n        }\n      ]\n    },\n    {\n      title: 'Расширенный поиск Проверка фильтров Проверка выпадающего списка кнопки \"Еще\"',\n      checks: [\n        {\n          status: 'fail',\n          title: 'edge-desktop',\n          tab: 0,\n          asserts: [\n            {\n              status: 'fail',\n              title: 'lang-popup',\n              images: {\n                expected: 'assets/images/1/edge-desktop_ref_7.png',\n                actual: 'assets/images/1/edge-desktop_current_7.png',\n                diff: 'assets/images/1/edge-desktop_diff_7.png'\n              }\n            },\n            {\n              status: 'success',\n              title: 'lang-popup2'\n            }\n          ],\n          meta: {\n            platform: 'desktop',\n            url: '/search/?text=metallica',\n            file: 'features/desktop/advanced-search/advanced-search.hermione.js',\n            sessionId: 'sddsfs231'\n          },\n          code: `it('Расширенный поиск Проверка фильтров Проверка выпадающего списка кнопки \"Еще\"', function() {\n    const PO = this.PO;\n\n    return this.browser\n        .shouldBeVisible(PO.advancedSearchLangPopup())\n        .assertView('lang-popup', PO.advancedSearchLangPopup.menu())\n        .keyPress('ARROW_UP')\n        .shouldBeVisible(PO.advancedSearchLangPopup.lastItemHovered())\n        .waitUntilPageReloaded(function() {\n            return this.keyPress('ENTER');\n        })\n        .shouldBeVisible(PO.advancedSearchLangPopup.lastItemHovered())\n        .shouldBeVisible(PO.advancedSearchLangPopup.lastItemChecked())\n        .assertView('lang-popup2', PO.advancedSearchLangPopup.menu())\n        .moveToObject(PO.advancedSearchLangPopup.firstItem())\n        .waitUntilPageReloaded(function() {\n            return this.click(PO.advancedSearchLangPopup.firstItemHovered());\n        })\n        .shouldBeVisible(PO.advancedSearchLangPopup())\n        .shouldBeVisible(PO.advancedSearchLangPopup.firstItemHovered())\n        .shouldBeVisible(PO.advancedSearchLangPopup.firstItemChecked())\n        .shouldBeVisible(PO.advancedSearchLangPopup.lastItemChecked())\n        .refresh()\n        .waitUntilPageLoaded()\n        .shouldBeVisible(PO.advancedSearchLangPopup())\n        .shouldBeVisible(PO.advancedSearchLangPopup.firstItemHovered())\n        .shouldBeVisible(PO.advancedSearchLangPopup.firstItemChecked())\n        .shouldBeVisible(PO.advancedSearchLangPopup.lastItemChecked());\n});`\n        }\n      ]\n    },\n    {\n      title: 'Расширенный поиск Проверка фильтров Проверка выпадающего списка кнопки \"Еще\"',\n      checks: [\n        {\n          status: 'fail',\n          title: 'edge-desktop',\n          tab: 1,\n          asserts: [\n            {\n              status: 'fail',\n              title: 'lang-popup',\n              images: {\n                expected: 'assets/images/1/edge-desktop_ref_7.png',\n                actual: 'assets/images/1/edge-desktop_current_7.png',\n                diff: 'assets/images/1/edge-desktop_diff_7.png'\n              }\n            },\n            {\n              status: 'success',\n              title: 'lang-popup2'\n            }\n          ],\n          meta: {\n            platform: 'desktop',\n            url: '/search/?text=metallica',\n            file: 'features/desktop/advanced-search/advanced-search.hermione.js',\n            sessionId: 'sddsfs231'\n          },\n          description: {\n            steps: [\n              'do: получить выдачу по запросу \"metallica\"',\n              'assert: получена выдача по указанному запросу',\n              'do: нажать на иконку \"Расширенного поиска\"',\n              'assert: открылась форма расширенного поиска',\n              'assert: по умолчанию ни один фильтр не выбран',\n              'do: кликнуть по кнопке \"Еще\"',\n              'assert: появился выпадающий список с языками',\n              'assert: внешний вид соответствует скриншоту',\n              'do: нажать кнопку \"Вверх\" на клавиатуре',\n              'assert: последний элемент выпадающего списка выделен',\n              'do: нажать кнопку \"Enter\" на клавиатуре',\n              'assert: выдача перезагрузилась аяксом',\n              'assert: последний элемент выпадающего списка выделен и выбран',\n              'assert: внешний вид соответствует скриншоту',\n              'do: навести курсор мыши на первый элемент выпадающего списка',\n              'assert: первый элемент выпадающего списка выделен',\n              'do: кликнуть в первый элемент выпадающего списка',\n              'assert: выдача перезагрузилась аяксом',\n              'assert: выпадающий список открыт',\n              'assert: первый элемент выпадающего списка выделен',\n              'assert: первый и последний элементы выпадающего списка выбраны',\n              'do: обновить страницу',\n              'assert: страница обновилась',\n              'do: кликнуть по кнопке \"Еще\"',\n              'assert: выпадающий список открыт',\n              'assert: первый элемент выпадающего списка выделен',\n              'assert: первый и последний элементы выпадающего списка выбраны',\n            ]\n          }\n        }\n      ]\n    },\n    {\n      title:'Расширенный поиск Проверка фильтров Проверка выпадающего списка кнопки \"Еще\"',\n      checks: [\n        {\n          status: 'success',\n          title: 'chrome-desktop'\n        },\n        {\n          status: 'success',\n          title: 'firefox'\n        },\n        {\n          status: 'success',\n          title: 'ie11'\n        }\n      ]\n    },\n  ]\n}\n","import React, { Component } from 'react';\nimport { TestBox } from '../TestBox/TestBox';\n\nimport './Main.css';\n\nimport data from '../../data';\n\nclass Main extends Component {\n  render() {\n    return (\n      <div className=\"Main\">\n        {data.tests.map((test, i) => <TestBox key={i} {...test} />)}\n      </div>\n    );\n  }\n}\n\nexport { Main };\n","import React, { Component } from 'react';\nimport { BaseStyles } from '@primer/components';\nimport { Header } from './components/Header/Header';\nimport { Main } from './components/Main/Main';\n\nimport \"primer/index.scss\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BaseStyles className=\"App\">\n        <Header/>\n        <Main />\n      </BaseStyles>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}